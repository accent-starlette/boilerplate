name: Test, Build and Publish

on: push 

jobs:
  test:
    name: Run Linting and Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_BD: appdb
        ports:
        - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Set up Python 3.7.x
      uses: actions/setup-python@v1
      with:
        python-version: 3.7.x

    - name: Install Dependencies
      run: pip install -r requirements/dev.txt

    - name: Run Linting and Tests
      env:
        PYTHONUNBUFFERED: 1
        ALLOWED_HOSTS: "*"
        DATABASE_URL: "postgresql://postgres:password@localhost:5432/appdb"
        SECRET_KEY: 'some-secret-key'
      run: cd src && scripts/test

  publish:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/development' || github.ref == 'refs/heads/staging'
    needs: test
    name: Publish to ECR
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Extract current branch name as tag
      id: tag
      shell: bash
      run: echo "::set-output name=id::${GITHUB_REF##*/}"

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: starlette-boilerplate
        IMAGE_TAG: ${{ steps.tag.outputs.id }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
